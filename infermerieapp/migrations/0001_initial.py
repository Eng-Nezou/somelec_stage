# Generated by Django 5.2.4 on 2025-08-20 21:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Analyse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Echographie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('matricule', models.CharField(max_length=100)),
                ('inam', models.CharField(max_length=16)),
                ('ur', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hospitalisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Irm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Radiographie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_medicament', models.IntegerField()),
                ('nom_chef', models.CharField(max_length=200)),
                ('nom_medecin', models.CharField(max_length=200)),
                ('nom_technicien', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Scanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('detail', models.TextField(blank=True, null=True)),
                ('drg', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(blank=True, null=True)),
                ('tarif_chn', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('medecin', 'MÃ©decin'), ('gestionnaire', 'Gestionnaire'), ('technicien', 'Technicien'), ('chef service', 'Chef service')], default='gestionnaire', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ordonnance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('gfu', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsap', models.CharField(blank=True, max_length=20, null=True)),
                ('prescription', models.CharField(blank=True, choices=[('Normale', 'Normale'), ('Urgent', 'Urgent'), ('Chronique', 'Chronique')], max_length=20, null=True)),
                ('diagnostic', models.CharField(blank=True, max_length=200, null=True)),
                ('statut', models.CharField(choices=[('en attente', 'En attente'), ('validÃ©e', 'ValidÃ©e'), ('annulÃ©e', 'AnnulÃ©e'), ('terminÃ©e', 'TerminÃ©e')], default='en attente', max_length=20)),
                ('validate_chef', models.BooleanField(default=False)),
                ('validate_medecin', models.BooleanField(default=False)),
                ('nom_chef', models.CharField(max_length=200, null=True)),
                ('nom_medecin', models.CharField(max_length=200, null=True)),
                ('nom_technicien', models.CharField(max_length=200, null=True)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infermerieapp.employer')),
            ],
        ),
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('quantite', models.IntegerField()),
                ('utilisation', models.IntegerField(null=True)),
                ('dosage', models.CharField(blank=True, choices=[('cp', 'CP'), ('sirop', 'SIROP'), ('gel', 'GEL'), ('sachet', 'SACHET'), ('creme', 'CREME'), ('injectable', 'INJECTABLE')], max_length=50, null=True)),
                ('duree', models.IntegerField(blank=True, null=True)),
                ('type_duree', models.CharField(blank=True, choices=[('jour', 'Jour'), ('semaine', 'Semaine'), ('mois', 'Mois')], max_length=20, null=True)),
                ('ordonnance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicaments', to='infermerieapp.ordonnance')),
            ],
        ),
        migrations.CreateModel(
            name='PrisEnCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('gfu_whatsap', models.CharField(blank=True, max_length=20, null=True)),
                ('validate_chef', models.BooleanField(default=False)),
                ('validate_medecin', models.BooleanField(default=False)),
                ('validate_technicien', models.BooleanField(default=False)),
                ('analyse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infermerieapp.analyse')),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infermerieapp.consultation')),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infermerieapp.employer')),
                ('examen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infermerieapp.examen')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infermerieapp.institution')),
            ],
        ),
    ]
